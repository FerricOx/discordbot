{
  "env": { "node": true, "es6": true },
  "extends": [
    "eslint:recommended"
  ],
  "plugins": [
    "babel"
  ],
  "rules": {
    "dot-notation": "off",
    "eqeqeq": "off",
    "max-len": ["error", { 
      "code": 132, 
      "ignoreTemplateLiterals": true, 
      "ignoreRegExpLiterals": true, 
      
      "ignorePattern": "^\\s*debug\\(|^import.*" 
    }],
    "no-empty": ["warn", { "allowEmptyCatch": true }],
    "no-eval": "warn",
    "no-fallthrough": "warn",
    "no-unused-vars": "warn",
    "no-undef": "error",
    "no-unexpected-multiline": "error",
    "object-curly-spacing": ["error", "always", {"objectsInObjects": false, "arraysInObjects": false}]
  },
  "ignorePatterns": [
    "build/"
  ],
  "overrides": [
    {
      "files": ["*.js"],
      "parser": "babel-eslint",
      "parserOptions": { 
        "ecmaVersion": 2019,
        "sourceType": "module",
        "ecmaFeatures": {
          "modules": true,
          "experimentalObjectRestSpread": true,
          "legacyDecorators": true
        },
        "babelOptions": {
          "configFile": "babel.config.js"
        }
      },
      "rules": {
        "no-empty": "off"
      }
    },
    {
      "files": ["*.ts"],
      "extends": [
        "standard",
        "standard-with-typescript"
      ],
      "globals": { "Atomics": "readonly", "SharedArrayBuffer": "readonly" },
      "parser": "@typescript-eslint/parser",
      "parserOptions": {
        "ecmaVersion": 2019,
        "sourceType": "module",
        "project": "./tsconfig.json"
      },
      "plugins": [
        "standard"
      ],
      "rules": {
        "@typescript-eslint/brace-style": "off",
        "@typescript-eslint/camelcase": "off",
        "@typescript-eslint/consistent-type-assertions": ["error", {
          "assertionStyle": "as",
          "objectLiteralTypeAssertions": "allow-as-parameter"
        }],
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/indent": ["error", 2, {
          "SwitchCase": 1,
          "MemberExpression": "off"
        }],
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-empty-function": ["error", { 
          "allow": ["arrowFunctions"] 
        }], // TODO
        "@typescript-eslint/no-floating-promises": ["error", { "ignoreVoid": true}],
        "@typescript-eslint/no-misused-promises": "warn",
        "@typescript-eslint/no-non-null-assertion": "off",
        "@typescript-eslint/no-var-requires": "off",
        "@typescript-eslint/no-unused-vars": ["warn", { 
          "args": "after-used", 
          "argsIgnorePattern": "^_", 
          "ignoreRestSiblings": true 
        }],
        "@typescript-eslint/restrict-template-expressions": "off",
        "@typescript-eslint/space-before-function-paren": ["error", {
          "anonymous": "always",
          "named": "never",
          "asyncArrow": "always"
        }],
        "@typescript-eslint/semi": ["warn", "always"],
        "@typescript-eslint/strict-boolean-expressions": "off",
        "brace-style": "off",
        "camelcase": "off",
        "comma-dangle": ["error", {
          "arrays": "only-multiline",
          "objects": "only-multiline",
          "imports": "never",
          "exports": "never",
          "functions": "never"
        }],
        "curly": "off",
        "func-call-spacing": "off",
        "import/order": ["warn", {
          "groups": [
            ["builtin", "external", "internal"],
            "parent",
            ["sibling", "index"]
          ],
          "newlines-between": "always-and-inside-groups",
          "alphabetize": {
            "order": "asc",
            "caseInsensitive":true
          }
        }],
        "no-case-declarations": "off",
        "no-console": "warn",
        "no-dupe-class-members": "off",
        "no-extra-boolean-cast": "off",
        "no-use-before-define": "off",
        "no-useless-escape": "off",
        "operator-linebreak": "off",
        "prefer-const": "warn",
        "prefer-destructuring": ["error", {
          "VariableDeclarator": {
            "array": false,
            "object": true
          },
          "AssignmentExpression": {
            "array": false,
            "object": true
          }
        },{
          "enforceForRenamedProperties": false
        }],    
        "prefer-promise-reject-errors": "off",
        "prefer-template": "error",
        "semi": "off",
        "space-before-function-paren": "off"
      }
    }
  ]
}
